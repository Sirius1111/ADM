.banner{height:100%;height:480px;padding:10px 0;overflow:hidden}.banner.banner-mobile{height:535px}.banner.banner-web{height:535px}.banner__container{height:100%;position:relative}.banner__row{height:100%;display:flex;align-items:center;justify-content:space-between}.banner__content{width:100%;margin-right:15px}.banner__content-title{font-size:32px;font-weight:700;margin-bottom:15px}.banner__content-slogan{font-size:15px;font-weight:500}.banner__content-buttons{margin-top:30px;display:flex;align-items:center}.banner__content-button{width:170px;display:inline-block;padding:16px 0 14px;margin:0 5px;border:1px solid #fff;text-align:center;border-radius:5px;text-decoration:none;color:#fff}.banner__content-button:last-child{margin-right:0}.banner__content-button:first-child{margin-left:0}.banner__animation{width:100%;position:absolute;right:0;top:50%;transform:translate(253px,-50%);z-index:-1;height:450px}.banner__animation video{width:100%;height:100%}.banner__image{width:70%}.banner__image img{width:100%}@media (max-width:992px){.banner{height:350px}.banner.banner-mobile{height:450px}.banner__animation{height:300px;transform:translate(180px,-50%)}.banner__content-title{font-size:28px}.banner__image{width:50%}}@media (max-width:767px){.banner{overflow:hidden;height:auto;min-height:350px;padding-bottom:60px}.banner.banner-mobile{height:auto;min-height:450px}.banner__row{flex-direction:column-reverse}.banner__animation{position:relative;transform:translate(0,0);right:inherit;top:inherit}.banner__content{margin-top:50px;margin-right:0;display:flex;flex-direction:column;align-items:center;text-align:center}.banner:not(.banner-main) .banner__content{margin-top:10px}}@media (max-width:480px){.banner{padding-bottom:40px}.banner__animation{width:150%}.banner__animation video{width:100%;height:100%}.banner__image{width:80%}.banner__content{margin-top:10px;text-align:left;align-items:flex-start}.banner__content-button{font-size:13px;width:150px}.banner__content-title{font-size:25px}.banner__content-slogan{font-size:13px}}@media (max-width:368px){.banner__content-title{font-size:22px}.banner__content-slogan{font-size:12px}.banner__content-button{font-size:12px;width:130px}}@-webkit-keyframes draw{100%{stroke-dashoffset:0;stroke-dasharray:200}}@keyframes draw{100%{stroke-dashoffset:0;stroke-dasharray:200}}.information-main{background:#101010;padding:30px 0 50px}.information-main__row{display:flex;align-items:flex-start}.information-main__item{width:100%;margin:0 10px}.information-main__item:last-child{margin-right:0}.information-main__item:first-child{margin-left:0}.information-main__item-icon{height:57.16px}.information-main__item-title{margin:17px 0 10px;font-size:14px;font-weight:700}.information-main__item-description{font-size:12px;font-weight:500}.information-main__item-btn{display:inline-block;padding:16px 26px 14px;border:1px solid #fff;border-radius:5px;text-decoration:none;color:#fff;text-align:center;font-size:15px;font-weight:500;margin-top:20px}@media (max-width:992px){.information-main__row{flex-wrap:wrap}.information-main__item{width:50%;padding:10px;margin:0}}@media (max-width:767px){.information-main{background:#000}.information-main__item{padding:10px}}@media (max-width:480px){.information{padding-top:50px;overflow:hidden}.information-main__item{width:100%;padding:0;margin:25px 0}.information-main__item:last-child{margin-bottom:0}.information-main__item:first-child{margin-top:0}.information-main__item-title{font-size:18px}.information-main__item-btn{font-size:13px;position:relative}.information-main__item-btn::after{content:'';border-top:6px dotted #fff;width:calc(100vw - 100% - 30px);position:absolute;right:0;margin-right:-20px;top:50%;transform:translate(100%,-50%)}}@-webkit-keyframes text-1{0%{left:0;transform:translateX(-110%)}50%{left:100%;transform:translateX(10%)}100%{left:0;transform:translateX(-110%)}}@keyframes text-1{0%{left:0;transform:translateX(-110%)}50%{left:100%;transform:translateX(10%)}100%{left:0;transform:translateX(-110%)}}@-webkit-keyframes text-2{0%{right:0;transform:translateX(110%)}50%{right:100%;transform:translateX(-10%)}100%{right:0;transform:translateX(110%)}}@keyframes text-2{0%{right:0;transform:translateX(110%)}50%{right:100%;transform:translateX(-10%)}100%{right:0;transform:translateX(110%)}}.video{position:relative;overflow:hidden;padding:100px 0 75px}.video.grey{background:#101010}.video__container{display:flex;justify-content:center}.video__container-image{position:relative;width:793px}.video__container-image>img{height:100%}.video__preview{position:absolute;top:20px;left:74px;z-index:9}.video__preview-image{width:644px;border-radius:5px;height:404px;overflow:hidden;text-align:center}.video__preview-image iframe,.video__preview-image img,.video__preview-image video{width:100%;height:100%}.video__preview-image img{position:absolute;-o-object-fit:cover;object-fit:cover;z-index:0}.video__preview-icon{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:68px;height:68px;display:flex;align-items:center;border-radius:50%;background:rgba(0,0,0,.7);transition:background .3s ease,transform .3s ease;cursor:pointer}.video__preview-icon img{transform:translateX(26px)}.video__preview-icon:hover{transform:translate(-50%,-50%) scale(.8);background:#000}.video__animation-text{position:absolute;left:0;top:117px;text-transform:uppercase;font-weight:700;color:#000;-webkit-animation:text-1 15s linear infinite;animation:text-1 15s linear infinite;pointer-events:none}.video__animation-text.grey{color:#101010}.video__animation-text span{font-size:145px;-webkit-text-stroke:2px #757575}.video__animation-text:nth-of-type(2){top:300px;left:inherit;right:-100%;-webkit-animation:text-2 15s linear infinite 3s;animation:text-2 15s linear infinite 3s}@media (max-width:992px){.video{padding:100px 0 75px}.video__container-image{width:700px}.video__container-image>picture img{width:100%}.video__preview{left:65px;top:15px}.video__preview-image{width:570px;height:360px}.video__preview-icon{width:48px;height:48px}.video__preview-icon img{width:18px;transform:translateX(18px)}.video__animation-text span{font-size:120px}}@media (max-width:767px){.video{padding:100px 0 20px}.video__container-image{width:100%}.video__container-image>picture img{display:none}.video__preview-image{width:100%}.video__preview{position:relative;top:0;left:0;width:100%}.video__preview-icon{width:50px;height:50px}.video__preview-icon img{width:15px;transform:translateX(20px)}.video__animation-text{top:0}.video__animation-text span{font-size:90px}.video__animation-text:nth-of-type(2){display:none}}@media (max-width:480px){.video__preview-image{height:250px}.video__animation-text{top:20px;-webkit-animation-duration:12s;animation-duration:12s}.video__animation-text span{font-size:70px}}@media (max-width:320px){.video__preview-image{height:200px}}.partners.grey{background:#101010}.partners__row{max-width:790px;margin:0 auto;display:flex;flex-wrap:wrap;align-items:center}.partners__item{flex:1 1 25%;display:flex;justify-content:center}@media (max-width:767px){.partners__item{flex-basis:25%;padding:15px}.partners__item img{width:100%}}.slogan{padding:111px 0}.slogan__container{display:flex;align-items:center;flex-direction:column}.slogan__title{text-align:center;font-size:32px;font-weight:700;margin-bottom:20px}.slogan__btn{display:inline-block;padding:16px 26px 14px;border-radius:5px;text-decoration:none;font-size:15px}@media (max-width:992px){.slogan__title{font-size:28px}}@media (max-width:480px){.slogan{padding:55px 0}.slogan__title{font-size:20px}.slogan__btn{font-size:13px}}@media (max-width:320px){.slogan__title{font-size:18px}.slogan__btn{font-size:12px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uY3NzIiwiaW5jbHVkZXMvYmFubmVyLnNjc3MiLCJtaXhpbnMvX21hcmdpbi5zY3NzIiwibWl4aW5zL19tZWRpYS5zY3NzIiwidXRpbHMvX3ZhcmlhYmxlcy5zY3NzIiwiY29tcG9uZW50cy9pbmZvcm1hdGlvbi1tYWluLnNjc3MiLCJpbmNsdWRlcy92aWRlby5zY3NzIiwiaW5jbHVkZXMvcGFydG5lcnMuc2NzcyIsImNvbXBvbmVudHMvc2xvZ2FuLW1haW4uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzQkEsUUNmSSxPQUFBLEtBQ0EsT0FBQSxNQUpKLFFBQUEsS0FBQSxFRHNCRSxTQ2ZNLE9Ea0JSLHNCQUNFLE9DYk0sTURnQlIsbUJBQ0UsT0NaTSxNRGVSLG1CQUNFLE9DWE0sS0RZTixTQ1hNLFNEY1IsYUFDRSxPQ1hVLEtEWVYsUUNWTSxLRFdOLFlDVlUsT0RXVixnQkNWVSxjRGFaLGlCQUNFLE1DVFUsS0RVVixhQ1JNLEtEV1IsdUJBQ0UsVUNSVSxLRFNWLFlDUlUsSURTVixjQ1JVLEtEV1osd0JBQ0UsVUNsQk8sS0RtQlAsWUU1REUsSUYrREoseUJBQ0UsV0NUTSxLRFVOLFFDVE0sS0RVTixZQ1RjLE9EWWhCLHdCQUNFLE1DVE0sTURVTixRQ2pCRyxhRGtCSCxRQ1RVLEtBQUEsRUFBVyxLRFVyQixPQ1RVLEVBQUEsSUFHUixPQUFBLElBQUEsTUFBQSxLRFFGLFdDUGdCLE9EUWhCLGNDVEcsSURVSCxnQkNQcUIsS0RRckIsTUFBTyxLQUdULG1DQUNFLGFDSEUsRURNSixvQ0FDRSxZQ0VNLEVEQ1IsbUJBQ0UsTUNJTSxLREhOLFNBQVUsU0d6RVIsTUFBQSxFRmlGQSxJQUFBLElETEYsVUNNTSxzQkRMTixRQ01NLEdETE4sT0NNTSxNREhSLHlCQUNFLE1DTVUsS0FHUixPQUFBLEtETEosZUFDRSxNQ1NNLElETlIsbUJBQ0UsTUNVTSxLRFBSLHlCQUNFLFFDV00sT0FBQSxNRFBOLHNCR3pHRSxPQUFBLE1GNkhBLG1CQUNJLE9BQUEs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ICAgICAgIF8gICAgICAgXyAgICAgICAgICAgX1xuICAgICAvIC8gLyAgIF9fIF98IHwgX19fIHwgfF9fICAgX18gX3wgfCAgICBfXyAgIF9fX18gXyBfIF9fIF9fX1xuICAgIC8gLyAvICAgLyBfYCB8IHwvIF8gXFx8ICdfIFxcIC8gX2AgfCB8X19fX1xcIFxcIC8gLyBfYCB8ICdfXy8gX198XG4gICAvIC8gLyAgIHwgKF98IHwgfCAoXykgfCB8XykgfCAoX3wgfCB8X19fX19cXCBWIC8gKF98IHwgfCAgXFxfXyBcXFxuICAvXy9fLyAgICAgXFxfXywgfF98XFxfX18vfF8uX18vIFxcX18sX3xffCAgICAgIFxcXy8gXFxfXyxffF98ICB8X19fL1xuICAgICAgICAgICAgfF9fXy9cblxuKi9cbi8qXG5cbiAgICAgIF9fX18gICAgICAgIF8gICAgICAgXyAgICAgICAgICAgX1xuICAgICAvIC8gLyAgIF9fIF98IHwgX19fIHwgfF9fICAgX18gX3wgfCAgICBfXyAgIF9fX18gXyBfIF9fIF9fX1xuICAgIC8gLyAvICAgLyBfYCB8IHwvIF8gXFx8ICdfIFxcIC8gX2AgfCB8X19fX1xcIFxcIC8gLyBfYCB8ICdfXy8gX198XG4gICAvIC8gLyAgIHwgKF98IHwgfCAoXykgfCB8XykgfCAoX3wgfCB8X19fX19cXCBWIC8gKF98IHwgfCAgXFxfXyBcXFxuICAvXy9fLyAgICAgXFxfXywgfF98XFxfX18vfF8uX18vIFxcX18sX3xffCAgICAgIFxcXy8gXFxfXyxffF98ICB8X19fL1xuICAgICAgICAgICAgfF9fXy9cblxuKi9cbi5iYW5uZXIge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGhlaWdodDogNDgwcHg7XG4gIHBhZGRpbmc6IDEwcHggMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAuYmFubmVyLmJhbm5lci1tb2JpbGUge1xuICAgIGhlaWdodDogNTM1cHg7IH1cbiAgLmJhbm5lci5iYW5uZXItd2ViIHtcbiAgICBoZWlnaHQ6IDUzNXB4OyB9XG4gIC5iYW5uZXJfX2NvbnRhaW5lciB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuYmFubmVyX19yb3cge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gIC5iYW5uZXJfX2NvbnRlbnQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1yaWdodDogMTVweDsgfVxuICAgIC5iYW5uZXJfX2NvbnRlbnQtdGl0bGUge1xuICAgICAgZm9udC1zaXplOiAzMnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxNXB4OyB9XG4gICAgLmJhbm5lcl9fY29udGVudC1zbG9nYW4ge1xuICAgICAgZm9udC1zaXplOiAxNXB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDsgfVxuICAgIC5iYW5uZXJfX2NvbnRlbnQtYnV0dG9ucyB7XG4gICAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAuYmFubmVyX19jb250ZW50LWJ1dHRvbiB7XG4gICAgICB3aWR0aDogMTcwcHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBwYWRkaW5nOiAxNnB4IDAgMTRweDtcbiAgICAgIG1hcmdpbjogMCA1cHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAgIC5iYW5uZXJfX2NvbnRlbnQtYnV0dG9uOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgICAgIC5iYW5uZXJfX2NvbnRlbnQtYnV0dG9uOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgLmJhbm5lcl9fYW5pbWF0aW9uIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMjUzcHgsIC01MCUpO1xuICAgIHotaW5kZXg6IC0xO1xuICAgIGhlaWdodDogNDUwcHg7IH1cbiAgICAuYmFubmVyX19hbmltYXRpb24gdmlkZW8ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgLmJhbm5lcl9faW1hZ2Uge1xuICAgIHdpZHRoOiA3MCU7IH1cbiAgICAuYmFubmVyX19pbWFnZSBpbWcge1xuICAgICAgd2lkdGg6IDEwMCU7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5iYW5uZXIge1xuICAgIGhlaWdodDogMzUwcHg7IH1cbiAgICAuYmFubmVyLmJhbm5lci1tb2JpbGUge1xuICAgICAgaGVpZ2h0OiA0NTBweDsgfVxuICAuYmFubmVyX19hbmltYXRpb24ge1xuICAgIGhlaWdodDogMzAwcHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMTgwcHgsIC01MCUpOyB9XG4gIC5iYW5uZXJfX2NvbnRlbnQtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjhweDsgfVxuICAuYmFubmVyX19pbWFnZSB7XG4gICAgd2lkdGg6IDUwJTsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuYmFubmVyIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtaW4taGVpZ2h0OiAzNTBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNjBweDsgfVxuICAgIC5iYW5uZXIuYmFubmVyLW1vYmlsZSB7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBtaW4taGVpZ2h0OiA0NTBweDsgfVxuICAuYmFubmVyX19yb3cge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTsgfVxuICAuYmFubmVyX19hbmltYXRpb24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKTtcbiAgICByaWdodDogaW5oZXJpdDtcbiAgICB0b3A6IGluaGVyaXQ7IH1cbiAgLmJhbm5lcl9fY29udGVudCB7XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5iYW5uZXI6bm90KC5iYW5uZXItbWFpbikgLmJhbm5lcl9fY29udGVudCB7XG4gICAgbWFyZ2luLXRvcDogMTBweDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAuYmFubmVyIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNDBweDsgfVxuICAuYmFubmVyX19hbmltYXRpb24ge1xuICAgIHdpZHRoOiAxNTAlOyB9XG4gICAgLmJhbm5lcl9fYW5pbWF0aW9uIHZpZGVvIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlOyB9XG4gIC5iYW5uZXJfX2ltYWdlIHtcbiAgICB3aWR0aDogODAlOyB9XG4gIC5iYW5uZXJfX2NvbnRlbnQge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfVxuICAuYmFubmVyX19jb250ZW50LWJ1dHRvbiB7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIHdpZHRoOiAxNTBweDsgfVxuICAuYmFubmVyX19jb250ZW50LXRpdGxlIHtcbiAgICBmb250LXNpemU6IDI1cHg7IH1cbiAgLmJhbm5lcl9fY29udGVudC1zbG9nYW4ge1xuICAgIGZvbnQtc2l6ZTogMTNweDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAzNjhweCkge1xuICAuYmFubmVyX19jb250ZW50LXRpdGxlIHtcbiAgICBmb250LXNpemU6IDIycHg7IH1cbiAgLmJhbm5lcl9fY29udGVudC1zbG9nYW4ge1xuICAgIGZvbnQtc2l6ZTogMTJweDsgfVxuICAuYmFubmVyX19jb250ZW50LWJ1dHRvbiB7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIHdpZHRoOiAxMzBweDsgfSB9XG5cbi8qXG5cbiAgICAgIF9fX18gICAgICAgIF8gICAgICAgXyAgICAgICAgICAgX1xuICAgICAvIC8gLyAgIF9fIF98IHwgX19fIHwgfF9fICAgX18gX3wgfCAgICBfXyAgIF9fX18gXyBfIF9fIF9fX1xuICAgIC8gLyAvICAgLyBfYCB8IHwvIF8gXFx8ICdfIFxcIC8gX2AgfCB8X19fX1xcIFxcIC8gLyBfYCB8ICdfXy8gX198XG4gICAvIC8gLyAgIHwgKF98IHwgfCAoXykgfCB8XykgfCAoX3wgfCB8X19fX19cXCBWIC8gKF98IHwgfCAgXFxfXyBcXFxuICAvXy9fLyAgICAgXFxfXywgfF98XFxfX18vfF8uX18vIFxcX18sX3xffCAgICAgIFxcXy8gXFxfXyxffF98ICB8X19fL1xuICAgICAgICAgICAgfF9fXy9cblxuKi9cbi8qXG5cbiAgICAgIF9fX18gICAgICAgIF8gICAgICAgXyAgICAgICAgICAgX1xuICAgICAvIC8gLyAgIF9fIF98IHwgX19fIHwgfF9fICAgX18gX3wgfCAgICBfXyAgIF9fX18gXyBfIF9fIF9fX1xuICAgIC8gLyAvICAgLyBfYCB8IHwvIF8gXFx8ICdfIFxcIC8gX2AgfCB8X19fX1xcIFxcIC8gLyBfYCB8ICdfXy8gX198XG4gICAvIC8gLyAgIHwgKF98IHwgfCAoXykgfCB8XykgfCAoX3wgfCB8X19fX19cXCBWIC8gKF98IHwgfCAgXFxfXyBcXFxuICAvXy9fLyAgICAgXFxfXywgfF98XFxfX18vfF8uX18vIFxcX18sX3xffCAgICAgIFxcXy8gXFxfXyxffF98ICB8X19fL1xuICAgICAgICAgICAgfF9fXy9cblxuKi9cbkBrZXlmcmFtZXMgZHJhdyB7XG4gIDEwMCUge1xuICAgIHN0cm9rZS1kYXNob2Zmc2V0OiAwO1xuICAgIHN0cm9rZS1kYXNoYXJyYXk6IDIwMDsgfSB9XG5cbi5pbmZvcm1hdGlvbi1tYWluIHtcbiAgYmFja2dyb3VuZDogIzEwMTAxMDtcbiAgcGFkZGluZzogMzBweCAwIDUwcHg7IH1cbiAgLmluZm9ybWF0aW9uLW1haW5fX3JvdyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfVxuICAuaW5mb3JtYXRpb24tbWFpbl9faXRlbSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwIDEwcHg7IH1cbiAgICAuaW5mb3JtYXRpb24tbWFpbl9faXRlbTpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMDsgfVxuICAgIC5pbmZvcm1hdGlvbi1tYWluX19pdGVtOmZpcnN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gICAgLmluZm9ybWF0aW9uLW1haW5fX2l0ZW0taWNvbiB7XG4gICAgICBoZWlnaHQ6IDU3LjE2cHg7IH1cbiAgICAuaW5mb3JtYXRpb24tbWFpbl9faXRlbS10aXRsZSB7XG4gICAgICBtYXJnaW46IDE3cHggMCAxMHB4O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgICAuaW5mb3JtYXRpb24tbWFpbl9faXRlbS1kZXNjcmlwdGlvbiB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBmb250LXdlaWdodDogNTAwOyB9XG4gICAgLmluZm9ybWF0aW9uLW1haW5fX2l0ZW0tYnRuIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBhZGRpbmc6IDE2cHggMjZweCAxNHB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZm9udC1zaXplOiAxNXB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgIG1hcmdpbi10b3A6IDIwcHg7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5pbmZvcm1hdGlvbi1tYWluX19yb3cge1xuICAgIGZsZXgtd3JhcDogd3JhcDsgfVxuICAuaW5mb3JtYXRpb24tbWFpbl9faXRlbSB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIG1hcmdpbjogMDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaW5mb3JtYXRpb24tbWFpbiB7XG4gICAgYmFja2dyb3VuZDogIzAwMDsgfVxuICAuaW5mb3JtYXRpb24tbWFpbl9faXRlbSB7XG4gICAgcGFkZGluZzogMTBweDsgfSB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xuICAuaW5mb3JtYXRpb24ge1xuICAgIHBhZGRpbmctdG9wOiA1MHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLmluZm9ybWF0aW9uLW1haW5fX2l0ZW0ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAyNXB4IDA7IH1cbiAgICAuaW5mb3JtYXRpb24tbWFpbl9faXRlbTpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgICAuaW5mb3JtYXRpb24tbWFpbl9faXRlbTpmaXJzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tdG9wOiAwOyB9XG4gIC5pbmZvcm1hdGlvbi1tYWluX19pdGVtLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDE4cHg7IH1cbiAgLmluZm9ybWF0aW9uLW1haW5fX2l0ZW0tYnRuIHtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLmluZm9ybWF0aW9uLW1haW5fX2l0ZW0tYnRuOjphZnRlciB7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGJvcmRlci10b3A6IDZweCBkb3R0ZWQgI2ZmZjtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMHZ3IC0gMTAwJSAtIDMwcHgpO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDA7XG4gICAgICBtYXJnaW4tcmlnaHQ6IC0yMHB4O1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxMDAlLCAtNTAlKTsgfSB9XG5cbi8qXG5cbiAgICAgIF9fX18gICAgICAgIF8gICAgICAgXyAgICAgICAgICAgX1xuICAgICAvIC8gLyAgIF9fIF98IHwgX19fIHwgfF9fICAgX18gX3wgfCAgICBfXyAgIF9fX18gXyBfIF9fIF9fX1xuICAgIC8gLyAvICAgLyBfYCB8IHwvIF8gXFx8ICdfIFxcIC8gX2AgfCB8X19fX1xcIFxcIC8gLyBfYCB8ICdfXy8gX198XG4gICAvIC8gLyAgIHwgKF98IHwgfCAoXykgfCB8XykgfCAoX3wgfCB8X19fX19cXCBWIC8gKF98IHwgfCAgXFxfXyBcXFxuICAvXy9fLyAgICAgXFxfXywgfF98XFxfX18vfF8uX18vIFxcX18sX3xffCAgICAgIFxcXy8gXFxfXyxffF98ICB8X19fL1xuICAgICAgICAgICAgfF9fXy9cblxuKi9cbi8qXG5cbiAgICAgIF9fX18gICAgICAgIF8gICAgICAgXyAgICAgICAgICAgX1xuICAgICAvIC8gLyAgIF9fIF98IHwgX19fIHwgfF9fICAgX18gX3wgfCAgICBfXyAgIF9fX18gXyBfIF9fIF9fX1xuICAgIC8gLyAvICAgLyBfYCB8IHwvIF8gXFx8ICdfIFxcIC8gX2AgfCB8X19fX1xcIFxcIC8gLyBfYCB8ICdfXy8gX198XG4gICAvIC8gLyAgIHwgKF98IHwgfCAoXykgfCB8XykgfCAoX3wgfCB8X19fX19cXCBWIC8gKF98IHwgfCAgXFxfXyBcXFxuICAvXy9fLyAgICAgXFxfXywgfF98XFxfX18vfF8uX18vIFxcX18sX3xffCAgICAgIFxcXy8gXFxfXyxffF98ICB8X19fL1xuICAgICAgICAgICAgfF9fXy9cblxuKi9cbkBrZXlmcmFtZXMgdGV4dC0xIHtcbiAgMCUge1xuICAgIGxlZnQ6IDAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTEwJSk7IH1cbiAgNTAlIHtcbiAgICBsZWZ0OiAxMDAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMCUpOyB9XG4gIDEwMCUge1xuICAgIGxlZnQ6IDAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTEwJSk7IH0gfVxuXG5Aa2V5ZnJhbWVzIHRleHQtMiB7XG4gIDAlIHtcbiAgICByaWdodDogMCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDExMCUpOyB9XG4gIDUwJSB7XG4gICAgcmlnaHQ6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMCUpOyB9XG4gIDEwMCUge1xuICAgIHJpZ2h0OiAwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTEwJSk7IH0gfVxuXG4udmlkZW8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBhZGRpbmc6IDEwMHB4IDAgNzVweDsgfVxuICAudmlkZW8uZ3JleSB7XG4gICAgYmFja2dyb3VuZDogIzEwMTAxMDsgfVxuICAudmlkZW9fX2NvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAgIC52aWRlb19fY29udGFpbmVyLWltYWdlIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHdpZHRoOiA3OTNweDsgfVxuICAgICAgLnZpZGVvX19jb250YWluZXItaW1hZ2UgPiBpbWcge1xuICAgICAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgLnZpZGVvX19wcmV2aWV3IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAyMHB4O1xuICAgIGxlZnQ6IDc0cHg7XG4gICAgei1pbmRleDogOTsgfVxuICAgIC52aWRlb19fcHJldmlldy1pbWFnZSB7XG4gICAgICB3aWR0aDogNjQ0cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICBoZWlnaHQ6IDQwNHB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICAgLnZpZGVvX19wcmV2aWV3LWltYWdlIGltZywgLnZpZGVvX19wcmV2aWV3LWltYWdlIHZpZGVvLCAudmlkZW9fX3ByZXZpZXctaW1hZ2UgaWZyYW1lIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTsgfVxuICAgICAgLnZpZGVvX19wcmV2aWV3LWltYWdlIGltZyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgICAgIHotaW5kZXg6IDA7IH1cbiAgICAudmlkZW9fX3ByZXZpZXctaWNvbiB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgd2lkdGg6IDY4cHg7XG4gICAgICBoZWlnaHQ6IDY4cHg7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC43KTtcbiAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgLjNzIGVhc2UsIHRyYW5zZm9ybSAuM3MgZWFzZTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgICAgLnZpZGVvX19wcmV2aWV3LWljb24gaW1nIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI2cHgpOyB9XG4gICAgICAudmlkZW9fX3ByZXZpZXctaWNvbjpob3ZlciB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHNjYWxlKDAuOCk7XG4gICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOyB9XG4gIC52aWRlb19fYW5pbWF0aW9uLXRleHQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMTE3cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogIzAwMDtcbiAgICBhbmltYXRpb246IHRleHQtMSAxNXMgIGxpbmVhciBpbmZpbml0ZTtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTsgfVxuICAgIC52aWRlb19fYW5pbWF0aW9uLXRleHQuZ3JleSB7XG4gICAgICBjb2xvcjogIzEwMTAxMDsgfVxuICAgIC52aWRlb19fYW5pbWF0aW9uLXRleHQgc3BhbiB7XG4gICAgICBmb250LXNpemU6IDE0NXB4O1xuICAgICAgLXdlYmtpdC10ZXh0LXN0cm9rZTogMnB4ICM3NTc1NzU7IH1cbiAgICAudmlkZW9fX2FuaW1hdGlvbi10ZXh0Om50aC1vZi10eXBlKDIpIHtcbiAgICAgIHRvcDogMzAwcHg7XG4gICAgICBsZWZ0OiBpbmhlcml0O1xuICAgICAgcmlnaHQ6IC0xMDAlO1xuICAgICAgYW5pbWF0aW9uOiB0ZXh0LTIgMTVzIGxpbmVhciBpbmZpbml0ZSAzczsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgLnZpZGVvIHtcbiAgICBwYWRkaW5nOiAxMDBweCAwIDc1cHg7IH1cbiAgLnZpZGVvX19jb250YWluZXItaW1hZ2Uge1xuICAgIHdpZHRoOiA3MDBweDsgfVxuICAgIC52aWRlb19fY29udGFpbmVyLWltYWdlID4gcGljdHVyZSBpbWcge1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgLnZpZGVvX19wcmV2aWV3IHtcbiAgICBsZWZ0OiA2NXB4O1xuICAgIHRvcDogMTVweDsgfVxuICAudmlkZW9fX3ByZXZpZXctaW1hZ2Uge1xuICAgIHdpZHRoOiA1NzBweDtcbiAgICBoZWlnaHQ6IDM2MHB4OyB9XG4gIC52aWRlb19fcHJldmlldy1pY29uIHtcbiAgICB3aWR0aDogNDhweDtcbiAgICBoZWlnaHQ6IDQ4cHg7IH1cbiAgICAudmlkZW9fX3ByZXZpZXctaWNvbiBpbWcge1xuICAgICAgd2lkdGg6IDE4cHg7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMThweCk7IH1cbiAgLnZpZGVvX19hbmltYXRpb24tdGV4dCBzcGFuIHtcbiAgICBmb250LXNpemU6IDEyMHB4OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC52aWRlbyB7XG4gICAgcGFkZGluZzogMTAwcHggMCAyMHB4OyB9XG4gIC52aWRlb19fY29udGFpbmVyLWltYWdlIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAgIC52aWRlb19fY29udGFpbmVyLWltYWdlID4gcGljdHVyZSBpbWcge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAudmlkZW9fX3ByZXZpZXctaW1hZ2Uge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC52aWRlb19fcHJldmlldyB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC52aWRlb19fcHJldmlldy1pY29uIHtcbiAgICB3aWR0aDogNTBweDtcbiAgICBoZWlnaHQ6IDUwcHg7IH1cbiAgICAudmlkZW9fX3ByZXZpZXctaWNvbiBpbWcge1xuICAgICAgd2lkdGg6IDE1cHg7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7IH1cbiAgLnZpZGVvX19hbmltYXRpb24tdGV4dCB7XG4gICAgdG9wOiAwcHg7IH1cbiAgICAudmlkZW9fX2FuaW1hdGlvbi10ZXh0IHNwYW4ge1xuICAgICAgZm9udC1zaXplOiA5MHB4OyB9XG4gICAgLnZpZGVvX19hbmltYXRpb24tdGV4dDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC52aWRlb19fcHJldmlldy1pbWFnZSB7XG4gICAgaGVpZ2h0OiAyNTBweDsgfVxuICAudmlkZW9fX2FuaW1hdGlvbi10ZXh0IHtcbiAgICB0b3A6IDIwcHg7XG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxMnM7IH1cbiAgICAudmlkZW9fX2FuaW1hdGlvbi10ZXh0IHNwYW4ge1xuICAgICAgZm9udC1zaXplOiA3MHB4OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDMyMHB4KSB7XG4gIC52aWRlb19fcHJldmlldy1pbWFnZSB7XG4gICAgaGVpZ2h0OiAyMDBweDsgfSB9XG5cbi8qXG5cbiAgICAgIF9fX18gICAgICAgIF8gICAgICAgXyAgICAgICAgICAgX1xuICAgICAvIC8gLyAgIF9fIF98IHwgX19fIHwgfF9fICAgX18gX3wgfCAgICBfXyAgIF9fX18gXyBfIF9fIF9fX1xuICAgIC8gLyAvICAgLyBfYCB8IHwvIF8gXFx8ICdfIFxcIC8gX2AgfCB8X19fX1xcIFxcIC8gLyBfYCB8ICdfXy8gX198XG4gICAvIC8gLyAgIHwgKF98IHwgfCAoXykgfCB8XykgfCAoX3wgfCB8X19fX19cXCBWIC8gKF98IHwgfCAgXFxfXyBcXFxuICAvXy9fLyAgICAgXFxfXywgfF98XFxfX18vfF8uX18vIFxcX18sX3xffCAgICAgIFxcXy8gXFxfXyxffF98ICB8X19fL1xuICAgICAgICAgICAgfF9fXy9cblxuKi9cbi5wYXJ0bmVycy5ncmV5IHtcbiAgYmFja2dyb3VuZDogIzEwMTAxMDsgfVxuXG4ucGFydG5lcnNfX3JvdyB7XG4gIG1heC13aWR0aDogNzkwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLnBhcnRuZXJzX19pdGVtIHtcbiAgZmxleDogMSAxIDI1JTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5wYXJ0bmVyc19faXRlbSB7XG4gICAgZmxleC1iYXNpczogMjUlO1xuICAgIHBhZGRpbmc6IDE1cHg7IH1cbiAgICAucGFydG5lcnNfX2l0ZW0gaW1nIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLypcblxuICAgICAgX19fXyAgICAgICAgXyAgICAgICBfICAgICAgICAgICBfXG4gICAgIC8gLyAvICAgX18gX3wgfCBfX18gfCB8X18gICBfXyBffCB8ICAgIF9fICAgX19fXyBfIF8gX18gX19fXG4gICAgLyAvIC8gICAvIF9gIHwgfC8gXyBcXHwgJ18gXFwgLyBfYCB8IHxfX19fXFwgXFwgLyAvIF9gIHwgJ19fLyBfX3xcbiAgIC8gLyAvICAgfCAoX3wgfCB8IChfKSB8IHxfKSB8IChffCB8IHxfX19fX1xcIFYgLyAoX3wgfCB8ICBcXF9fIFxcXG4gIC9fL18vICAgICBcXF9fLCB8X3xcXF9fXy98Xy5fXy8gXFxfXyxffF98ICAgICAgXFxfLyBcXF9fLF98X3wgIHxfX18vXG4gICAgICAgICAgICB8X19fL1xuXG4qL1xuLypcblxuICAgICAgX19fXyAgICAgICAgXyAgICAgICBfICAgICAgICAgICBfXG4gICAgIC8gLyAvICAgX18gX3wgfCBfX18gfCB8X18gICBfXyBffCB8ICAgIF9fICAgX19fXyBfIF8gX18gX19fXG4gICAgLyAvIC8gICAvIF9gIHwgfC8gXyBcXHwgJ18gXFwgLyBfYCB8IHxfX19fXFwgXFwgLyAvIF9gIHwgJ19fLyBfX3xcbiAgIC8gLyAvICAgfCAoX3wgfCB8IChfKSB8IHxfKSB8IChffCB8IHxfX19fX1xcIFYgLyAoX3wgfCB8ICBcXF9fIFxcXG4gIC9fL18vICAgICBcXF9fLCB8X3xcXF9fXy98Xy5fXy8gXFxfXyxffF98ICAgICAgXFxfLyBcXF9fLF98X3wgIHxfX18vXG4gICAgICAgICAgICB8X19fL1xuXG4qL1xuLnNsb2dhbiB7XG4gIHBhZGRpbmc6IDExMXB4IDA7IH1cbiAgLnNsb2dhbl9fY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuICAuc2xvZ2FuX190aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG4gIC5zbG9nYW5fX2J0biB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmc6IDE2cHggMjZweCAxNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1zaXplOiAxNXB4OyB9XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCkge1xuICAuc2xvZ2FuX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyOHB4OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gIC5zbG9nYW4ge1xuICAgIHBhZGRpbmc6IDU1cHggMDsgfVxuICAuc2xvZ2FuX190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyMHB4OyB9XG4gIC5zbG9nYW5fX2J0biB7XG4gICAgZm9udC1zaXplOiAxM3B4OyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDMyMHB4KSB7XG4gIC5zbG9nYW5fX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDE4cHg7IH1cbiAgLnNsb2dhbl9fYnRuIHtcbiAgICBmb250LXNpemU6IDEycHg7IH0gfVxuIiwiQGltcG9ydCAnLi4vbWl4aW5zL21hcmdpbic7XHJcbkBpbXBvcnQgJy4uL21peGlucy9tZWRpYSc7XHJcbkBpbXBvcnQgJy4uL3V0aWxzL3ZhcmlhYmxlcyc7XHJcblxyXG4uYmFubmVye1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA0ODBweDtcclxuICAgIHBhZGRpbmc6IDEwcHggMDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgJi5iYW5uZXItbW9iaWxle1xyXG4gICAgICAgIGhlaWdodDogNTM1cHg7XHJcbiAgICB9XHJcbiAgICAmLmJhbm5lci13ZWJ7XHJcbiAgICAgICAgaGVpZ2h0OiA1MzVweDtcclxuICAgIH1cclxuICAgICZfX2NvbnRhaW5lcntcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG4gICAgJl9fcm93e1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgfVxyXG4gICAgJl9fY29udGVudHtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbiAgICAgICAgJi10aXRsZXtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1zbG9nYW57XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1idXR0b25ze1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLWJ1dHRvbntcclxuICAgICAgICAgICAgd2lkdGg6IDE3MHB4O1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDE2cHggMCAxNHB4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgNXB4O1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkd2hpdGUtY29sb3I7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkd2hpdGUtY29sb3I7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGgtbWFyZ2luO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2FuaW1hdGlvbntcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMjUzcHgsLTUwJSk7XHJcbiAgICAgICAgei1pbmRleDogLTE7XHJcbiAgICAgICAgaGVpZ2h0OiA0NTBweDtcclxuICAgICAgICB2aWRlb3tcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmX19pbWFnZXtcclxuICAgICAgICB3aWR0aDogNzAlO1xyXG4gICAgICAgIGltZ3tcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyA8MTIwMFxyXG5AaW5jbHVkZSBtZWRpYS1sYXB0b3Age31cclxuLy8gPDk5MlxyXG5AaW5jbHVkZSBtZWRpYS10YWJsZXQtaG9yaXpvbnRhbCB7XHJcbiAgICAuYmFubmVye1xyXG4gICAgICAgICYuYmFubmVyLW1vYmlsZXtcclxuICAgICAgICAgICAgaGVpZ2h0OiA0NTBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaGVpZ2h0OiAzNTBweDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmJhbm5lcl9fYW5pbWF0aW9ueyBcclxuICAgICAgICBoZWlnaHQ6IDMwMHB4O1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDE4MHB4LC01MCUpO1xyXG4gICAgfVxyXG4gICAgLmJhbm5lcl9fY29udGVudC10aXRsZXtcclxuICAgICAgICBmb250LXNpemU6IDI4cHg7XHJcbiAgICB9XHJcbiAgICAuYmFubmVyX19pbWFnZXtcclxuICAgICAgICB3aWR0aDogNTAlO1xyXG4gICAgfVxyXG59XHJcbi8vIDw3NjhcclxuQGluY2x1ZGUgbWVkaWEtdGFibGV0IHtcclxuICAgIC5iYW5uZXJ7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgbWluLWhlaWdodDogMzUwcHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDYwcHg7XHJcbiAgICAgICAgJi5iYW5uZXItbW9iaWxle1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDQ1MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5iYW5uZXJfX3Jvd3tcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XHJcbiAgICB9XHJcbiAgICAuYmFubmVyX19hbmltYXRpb257XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsMCk7XHJcbiAgICAgICAgcmlnaHQ6IGluaGVyaXQ7XHJcbiAgICAgICAgdG9wOiBpbmhlcml0O1xyXG4gICAgfVxyXG4gICAgLmJhbm5lcl9fY29udGVudHtcclxuICAgICAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICAuYmFubmVyOm5vdCguYmFubmVyLW1haW4pe1xyXG4gICAgICAgIC5iYW5uZXJfX2NvbnRlbnR7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi8vIDw0ODBcclxuQGluY2x1ZGUgbWVkaWEtbW9iaWxlIHtcclxuICAgIC5iYW5uZXJ7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDQwcHg7XHJcbiAgICB9XHJcbiAgICAuYmFubmVyX19hbmltYXRpb257XHJcbiAgICAgICAgd2lkdGg6IDE1MCU7XHJcbiAgICAgICAgdmlkZW97XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7ICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmJhbm5lcl9faW1hZ2V7XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgIH1cclxuICAgIC5iYW5uZXJfX2NvbnRlbnR7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG4gICAgfVxyXG4gICAgLmJhbm5lcl9fY29udGVudC1idXR0b257XHJcbiAgICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgICB3aWR0aDogMTUwcHg7XHJcbiAgICB9XHJcbiAgICAuYmFubmVyX19jb250ZW50LXRpdGxle1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjVweDtcclxuICAgIH1cclxuICAgIC5iYW5uZXJfX2NvbnRlbnQtc2xvZ2Fue1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIH1cclxufVxyXG4vLyA8MzY4XHJcbkBpbmNsdWRlIG1lZGlhLW1vYmlsZS1zbWFsbCB7XHJcbiAgICAuYmFubmVyX19jb250ZW50LXRpdGxle1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjJweDtcclxuICAgIH1cclxuICAgIC5iYW5uZXJfX2NvbnRlbnQtc2xvZ2Fue1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIH1cclxuICAgIC5iYW5uZXJfX2NvbnRlbnQtYnV0dG9ue1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICB3aWR0aDogMTMwcHg7XHJcbiAgICAgfVxyXG59IiwiQG1peGluIGgtbWFyZ2luKCkge1xuICAmOmxhc3QtY2hpbGR7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG4gICY6Zmlyc3QtY2hpbGR7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbn1cbkBtaXhpbiB2LW1hcmdpbigpIHtcbiAgJjpsYXN0LWNoaWxke1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbiAgJjpmaXJzdC1jaGlsZHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG59XG4iLCJAaW1wb3J0ICcuLi91dGlscy92YXJpYWJsZXMnO1xuJG1lZGlhV2lkdGhNb2JpbGVTbWFsbDogMzIwcHggIWdsb2JhbDsvLy3QtNC+0LHQsNCy0LjQuyDQv9C+0YLQvtC80YMg0YfRgtC+INC/0L7Rj9Cy0LvRj9C70LDRgdGMINCx0LXQu9Cw0Y8g0L/QvtC70L7RgdCwINGBINCx0L7QutGDXG4kbWVkaWFXaWR0aE1vYmlsZTogNDgwcHggIWdsb2JhbDtcbiRtZWRpYVdpZHRoVGFibGV0OiA3NjdweCAhZ2xvYmFsO1xuJG1lZGlhV2lkdGhUYWJsZXRIb3Jpem9udGFsOiA5OTJweCAhZ2xvYmFsO1xuJG1lZGlhV2lkdGhMYXB0b3A6IDEyMDBweCAhZ2xvYmFsO1xuXG5AbWl4aW4gbWVkaWEtbW9iaWxlLXNtYWxsIHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJG1lZGlhV2lkdGhNb2JpbGVTbWFsbCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBtZWRpYS1tb2JpbGUge1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWVkaWFXaWR0aE1vYmlsZSkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBtZWRpYS10YWJsZXQge1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWVkaWFXaWR0aFRhYmxldCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBtZWRpYS10YWJsZXQtaG9yaXpvbnRhbCB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtZWRpYVdpZHRoVGFibGV0SG9yaXpvbnRhbCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBtZWRpYS1sYXB0b3Age1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAkbWVkaWFXaWR0aExhcHRvcCkge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBtZWRpYS1jdXN0b20oJHdpZHRoKXtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJHdpZHRoKSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cbiIsIiRtZWRpYVdpZHRoTW9iaWxlU21hbGw6IDM2OHB4ICFnbG9iYWw7Ly8t0LTQvtCx0LDQstC40Lsg0L/QvtGC0L7QvNGDINGH0YLQviDQv9C+0Y/QstC70Y/Qu9Cw0YHRjCDQsdC10LvQsNGPINC/0L7Qu9C+0YHQsCDRgSDQsdC+0LrRg1xuJG1lZGlhV2lkdGhNb2JpbGU6IDQ4MHB4ICFnbG9iYWw7XG4kbWVkaWFXaWR0aFRhYmxldDogNzY3cHggIWdsb2JhbDtcbiRtZWRpYVdpZHRoVGFibGV0SG9yaXpvbnRhbDogOTkycHggIWdsb2JhbDtcbiRtZWRpYVdpZHRoTGFwdG9wOiAxMjAwcHggIWdsb2JhbDtcblxuLypcblxuICAgICAgX19fXyAgICAgICAgXyAgICAgICBfICAgICAgICAgICBfXG4gICAgIC8gLyAvICAgX18gX3wgfCBfX18gfCB8X18gICBfXyBffCB8ICAgIF9fICAgX19fXyBfIF8gX18gX19fXG4gICAgLyAvIC8gICAvIF9gIHwgfC8gXyBcXHwgJ18gXFwgLyBfYCB8IHxfX19fXFwgXFwgLyAvIF9gIHwgJ19fLyBfX3xcbiAgIC8gLyAvICAgfCAoX3wgfCB8IChfKSB8IHxfKSB8IChffCB8IHxfX19fX1xcIFYgLyAoX3wgfCB8ICBcXF9fIFxcXG4gIC9fL18vICAgICBcXF9fLCB8X3xcXF9fXy98Xy5fXy8gXFxfXyxffF98ICAgICAgXFxfLyBcXF9fLF98X3wgIHxfX18vXG4gICAgICAgICAgICB8X19fL1xuXG4qL1xuJG1haW4tZm9udDogJ011bGxlcicsIHNhbnMtc2VyaWY7XG4kbGluZS1oZWlnaHQ6IDEuMjtcblxuJG1haW4tY29sb3I6ICMxMTU3RkYgO1xuJHNlY29uZC1jb2xvcjogI0U2MEI4OTtcbiRkYXJrLWNvbG9yOiAgIzAwMCA7XG4kd2hpdGUtY29sb3I6ICAjZmZmICA7XG5cbiIsIlxyXG5AaW1wb3J0ICcuLi9taXhpbnMvbWFyZ2luJztcclxuQGltcG9ydCAnLi4vbWl4aW5zL21lZGlhJztcclxuQGltcG9ydCAnLi4vdXRpbHMvdmFyaWFibGVzJztcclxuQGtleWZyYW1lcyBkcmF3IHtcclxuXHQxMDAlIHtcclxuICAgICAgICBzdHJva2UtZGFzaG9mZnNldDogMDtcclxuICAgICAgICBzdHJva2UtZGFzaGFycmF5OiAyMDA7XHJcblx0fVxyXG59XHJcbi5pbmZvcm1hdGlvbi1tYWlue1xyXG4gICAgYmFja2dyb3VuZDogIzEwMTAxMDtcclxuICAgIHBhZGRpbmc6IDMwcHggMCA1MHB4O1xyXG4gICAgJl9fcm93e1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAgICB9XHJcbiAgICAmX19pdGVte1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1hcmdpbjogMCAxMHB4O1xyXG4gICAgICAgIEBpbmNsdWRlIGgtbWFyZ2luO1xyXG4gICAgICAgICYtaWNvbntcclxuICAgICAgICAgICAgaGVpZ2h0OiA1Ny4xNnB4O1xyXG4gICAgICAgICAgICAvLyBzdmd7XHJcbiAgICAgICAgICAgIC8vICAgICBmaWxsOiBub25lO1xyXG4gICAgICAgICAgICAvLyAgICAgc3Ryb2tlOiB3aGl0ZTtcclxuICAgICAgICAgICAgLy8gICAgIHN0cm9rZS13aWR0aDogLjY7XHJcbiAgICAgICAgICAgIC8vICAgICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2UtaW4tb3V0O1xyXG4gICAgICAgICAgICAvLyAgICAgcGF0aCB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgc3Ryb2tlLWRhc2hhcnJheTogMjAwO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIHN0cm9rZS1kYXNob2Zmc2V0OiAtMjAwO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggNCB7ICAgIFxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAmOm50aC1vZi10eXBlKCN7JGl9KSB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICBhbmltYXRpb246IGRyYXcgMTUwMG1zICN7JGkgKiA1MDB9bXMgZm9yd2FyZHM7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgIH0gICAgIFxyXG4gICAgICAgICAgICAvLyAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJi10aXRsZXtcclxuICAgICAgICAgICAgbWFyZ2luOiAxN3B4IDAgMTBweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1kZXNjcmlwdGlvbntcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLWJ0bntcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxNnB4IDI2cHggMTRweDtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHdoaXRlLWNvbG9yO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZS1jb2xvcjtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyA8OTkyXHJcbkBpbmNsdWRlIG1lZGlhLXRhYmxldC1ob3Jpem9udGFsIHtcclxuICAgIC5pbmZvcm1hdGlvbi1tYWluX19yb3d7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfVxyXG4gICAgLmluZm9ybWF0aW9uLW1haW5fX2l0ZW17XHJcbiAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgIH1cclxufVxyXG4vLyA8NzY4XHJcbkBpbmNsdWRlIG1lZGlhLXRhYmxldCB7XHJcbiAgICAuaW5mb3JtYXRpb24tbWFpbntcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkZGFyay1jb2xvcjtcclxuICAgIH1cclxuICAgIC5pbmZvcm1hdGlvbi1tYWluX19pdGVte1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICB9XHJcbn1cclxuLy8gPDQ4MFxyXG5AaW5jbHVkZSBtZWRpYS1tb2JpbGUge1xyXG4gICAgLmluZm9ybWF0aW9ue1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiA1MHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB9XHJcbiAgICAuaW5mb3JtYXRpb24tbWFpbl9faXRlbXtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIG1hcmdpbjogMjVweCAwO1xyXG4gICAgICAgIEBpbmNsdWRlIHYtbWFyZ2luO1xyXG4gICAgfVxyXG4gICAgLmluZm9ybWF0aW9uLW1haW5fX2l0ZW0tdGl0bGV7XHJcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgfVxyXG4gICAgLmluZm9ybWF0aW9uLW1haW5fX2l0ZW0tYnRue1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgJjo6YWZ0ZXJ7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICBib3JkZXItdG9wOiA2cHggZG90dGVkICR3aGl0ZS1jb2xvcjtcclxuICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwdncgLSAxMDAlIC0gMzBweCk7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLTIwcHg7XHJcbiAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxMDAlLCAtNTAlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAaW1wb3J0ICcuLi91dGlscy92YXJpYWJsZXMnO1xyXG5AaW1wb3J0ICcuLi9taXhpbnMvbWVkaWEnO1xyXG5Aa2V5ZnJhbWVzIHRleHQtMSB7XHJcbiAgICAwJSB7XHJcbiAgICAgICAgbGVmdDogMCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMTAlKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgNTAlIHtcclxuICAgICAgICBsZWZ0OiAxMDAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMCUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAxMDAlIHtcclxuICAgICAgICBsZWZ0OiAwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTExMCUpO1xyXG4gICAgfVxyXG59XHJcbkBrZXlmcmFtZXMgdGV4dC0yIHtcclxuICAgIDAlIHtcclxuICAgICAgICByaWdodDogMCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDExMCUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICA1MCUge1xyXG4gICAgICAgIHJpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAlKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgcmlnaHQ6IDAlO1xyXG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMTAlKTtcclxuICAgIH1cclxufVxyXG5cclxuLnZpZGVve1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHBhZGRpbmc6IDEwMHB4IDAgNzVweDtcclxuICAgICYuZ3JleXtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjMTAxMDEwO1xyXG4gICAgfVxyXG4gICAgJl9fY29udGFpbmVye1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgJi1pbWFnZXtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICB3aWR0aDogNzkzcHg7XHJcbiAgICAgICAgICAgID5pbWd7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmX19wcmV2aWV3e1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDIwcHg7XHJcbiAgICAgICAgbGVmdDogNzRweDtcclxuICAgICAgICB6LWluZGV4OiA5O1xyXG4gICAgICAgICYtaW1hZ2V7XHJcbiAgICAgICAgICAgIHdpZHRoOiA2NDRweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQwNHB4O1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGltZywgdmlkZW8sIGlmcmFtZXtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGltZ3tcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgICAgICAgICAgICAgei1pbmRleDogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmLWljb257XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcclxuICAgICAgICAgICAgd2lkdGg6IDY4cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNjhweDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKCRjb2xvcjogJGRhcmstY29sb3IsICRhbHBoYTogLjcpO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIC4zcyBlYXNlLCB0cmFuc2Zvcm0gLjNzIGVhc2U7XHJcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAgICAgaW1ne1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI2cHgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpIHNjYWxlKC44KTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoJGNvbG9yOiAkZGFyay1jb2xvciwgJGFscGhhOiAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2FuaW1hdGlvbi10ZXh0e1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHRvcDogMTE3cHg7XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICBjb2xvcjogJGRhcmstY29sb3I7XHJcbiAgICAgICAgYW5pbWF0aW9uOiB0ZXh0LTEgMTVzICBsaW5lYXIgaW5maW5pdGU7XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgJi5ncmV5e1xyXG4gICAgICAgICAgICBjb2xvcjogIzEwMTAxMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgc3BhbntcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNDVweDtcclxuICAgICAgICAgICAgLXdlYmtpdC10ZXh0LXN0cm9rZTogMnB4ICM3NTc1NzU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6bnRoLW9mLXR5cGUoMil7XHJcbiAgICAgICAgICAgIHRvcDogMzAwcHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IGluaGVyaXQ7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAtMTAwJTtcclxuICAgICAgICAgICAgYW5pbWF0aW9uOiB0ZXh0LTIgMTVzIGxpbmVhciBpbmZpbml0ZSAzcztcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIDwxMjAwXHJcbkBpbmNsdWRlIG1lZGlhLWxhcHRvcCB7fVxyXG4vLyA8OTkyXHJcbkBpbmNsdWRlIG1lZGlhLXRhYmxldC1ob3Jpem9udGFsIHtcclxuICAgIC52aWRlb3tcclxuICAgICAgICBwYWRkaW5nOiAxMDBweCAwIDc1cHg7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC52aWRlb19fY29udGFpbmVyLWltYWdle1xyXG4gICAgICAgIHdpZHRoOiA3MDBweDtcclxuICAgICAgICA+cGljdHVyZSBpbWd7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC52aWRlb19fcHJldmlld3tcclxuICAgICAgICBsZWZ0OiA2NXB4O1xyXG4gICAgICAgIHRvcDogMTVweDtcclxuICAgIH1cclxuICAgIC52aWRlb19fcHJldmlldy1pbWFnZSB7XHJcbiAgICAgICAgd2lkdGg6IDU3MHB4O1xyXG4gICAgICAgIGhlaWdodDogMzYwcHg7XHJcbiAgICB9XHJcbiAgICAudmlkZW9fX3ByZXZpZXctaWNvbntcclxuICAgICAgICB3aWR0aDogNDhweDtcclxuICAgICAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICAgICAgaW1ne1xyXG4gICAgICAgICAgICB3aWR0aDogMThweDtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDE4cHgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC52aWRlb19fYW5pbWF0aW9uLXRleHR7XHJcbiAgICAgICAgc3BhbntcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxMjBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLy8gPDc2OFxyXG5AaW5jbHVkZSBtZWRpYS10YWJsZXQge1xyXG4gICAgLnZpZGVve1xyXG4gICAgICAgIHBhZGRpbmc6IDEwMHB4IDAgMjBweDtcclxuICAgIH1cclxuICAgIC52aWRlb19fY29udGFpbmVyLWltYWdle1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgID5waWN0dXJlIGltZ3tcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAudmlkZW9fX3ByZXZpZXctaW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gICAgLnZpZGVvX19wcmV2aWV3e1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuICAgIC52aWRlb19fcHJldmlldy1pY29ue1xyXG4gICAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxNXB4O1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjBweCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnZpZGVvX19hbmltYXRpb24tdGV4dHtcclxuICAgICAgICB0b3A6IDBweDtcclxuICAgICAgICBzcGFue1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDkwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6bnRoLW9mLXR5cGUoMil7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbi8vIDw0ODBcclxuQGluY2x1ZGUgbWVkaWEtbW9iaWxlIHtcclxuICAgIC52aWRlb19fcHJldmlldy1pbWFnZSB7XHJcbiAgICAgICAgaGVpZ2h0OiAyNTBweDtcclxuICAgIH1cclxuICAgIC52aWRlb19fYW5pbWF0aW9uLXRleHR7XHJcbiAgICAgICAgdG9wOiAyMHB4O1xyXG4gICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMTJzO1xyXG4gICAgICAgIHNwYW57XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNzBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLy8gPDMyMFxyXG5AaW5jbHVkZSBtZWRpYS1tb2JpbGUtc21hbGwge1xyXG4gICAgLnZpZGVvX19wcmV2aWV3LWltYWdlIHtcclxuICAgICAgICBoZWlnaHQ6IDIwMHB4O1xyXG4gICAgfVxyXG59IiwiQGltcG9ydCAnLi4vbWl4aW5zL21lZGlhJztcclxuXHJcbi5wYXJ0bmVyc3tcclxuICAgICYuZ3JleXtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjMTAxMDEwO1xyXG4gICAgfVxyXG4gICAgJl9fcm93e1xyXG4gICAgICAgIG1heC13aWR0aDogNzkwcHg7XHJcbiAgICAgICAgbWFyZ2luOjAgYXV0bztcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgJl9faXRlbXtcclxuICAgICAgICBmbGV4OiAxIDEgMjUlO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIDw3NjhcclxuQGluY2x1ZGUgbWVkaWEtdGFibGV0IHtcclxuICAgIC5wYXJ0bmVyc19faXRlbXtcclxuICAgICAgICBmbGV4LWJhc2lzOiAyNSU7XHJcbiAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICBpbWd7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIkBpbXBvcnQgJy4uL3V0aWxzL3ZhcmlhYmxlcyc7XHJcbkBpbXBvcnQgJy4uL21peGlucy9tZWRpYSc7XHJcblxyXG4uc2xvZ2Fue1xyXG4gICAgcGFkZGluZzogMTExcHggMDtcclxuICAgICZfX2NvbnRhaW5lcntcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIH1cclxuICAgICZfX3RpdGxle1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmb250LXNpemU6IDMycHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIH1cclxuICAgICZfX2J0bntcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcGFkZGluZzogMTZweCAyNnB4IDE0cHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBpbmNsdWRlIG1lZGlhLXRhYmxldC1ob3Jpem9udGFsIHtcclxuICAgIC5zbG9nYW5fX3RpdGxle1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgIH1cclxufVxyXG4vLyA8NDgwXHJcbkBpbmNsdWRlIG1lZGlhLW1vYmlsZSB7XHJcbiAgICAuc2xvZ2Fue1xyXG4gICAgICAgIHBhZGRpbmc6IDU1cHggMDtcclxuICAgIH1cclxuICAgIC5zbG9nYW5fX3RpdGxle1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIH1cclxuICAgIC5zbG9nYW5fX2J0bntcclxuICAgICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICB9XHJcbn1cclxuLy8gPDMyMFxyXG5AaW5jbHVkZSBtZWRpYS1tb2JpbGUtc21hbGwge1xyXG4gICAgLnNsb2dhbl9fdGl0bGV7XHJcbiAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgfVxyXG4gICAgLnNsb2dhbl9fYnRue1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIH1cclxufSJdfQ== */
