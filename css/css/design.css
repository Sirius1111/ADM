.banner{height:100%;height:480px;padding:10px 0;overflow:hidden}.banner.banner-mobile{height:535px}.banner.banner-web{height:535px}.banner__container{height:100%;position:relative}.banner__row{height:100%;display:flex;align-items:center;justify-content:space-between}.banner__content{width:100%;margin-right:15px}.banner__content-title{font-size:32px;font-weight:700;margin-bottom:15px}.banner__content-slogan{font-size:15px;font-weight:500}.banner__content-buttons{margin-top:30px;display:flex;align-items:center}.banner__content-button{width:170px;display:inline-block;padding:16px 0 14px;margin:0 5px;border:1px solid #fff;text-align:center;border-radius:5px;text-decoration:none;color:#fff}.banner__content-button:last-child{margin-right:0}.banner__content-button:first-child{margin-left:0}.banner__animation{width:100%;position:absolute;right:0;top:50%;transform:translate(253px,-50%);z-index:-1;height:450px}.banner__animation video{width:100%;height:100%}.banner__image{width:70%}.banner__image img{width:100%}@media (max-width:992px){.banner{height:350px}.banner.banner-mobile{height:450px}.banner__animation{height:300px;transform:translate(180px,-50%)}.banner__content-title{font-size:28px}.banner__image{width:50%}}@media (max-width:767px){.banner{overflow:hidden;height:auto;min-height:350px;padding-bottom:60px}.banner.banner-mobile{height:auto;min-height:450px}.banner__row{flex-direction:column-reverse}.banner__animation{position:relative;transform:translate(0,0);right:inherit;top:inherit}.banner__content{margin-top:50px;margin-right:0;display:flex;flex-direction:column;align-items:center;text-align:center}.banner:not(.banner-main) .banner__content{margin-top:10px}}@media (max-width:480px){.banner{padding-bottom:40px}.banner__animation{width:150%}.banner__animation video{width:100%;height:100%}.banner__image{width:80%}.banner__content{margin-top:10px;text-align:left;align-items:flex-start}.banner__content-button{font-size:13px;width:150px}.banner__content-title{font-size:25px}.banner__content-slogan{font-size:13px}}@media (max-width:368px){.banner__content-title{font-size:22px}.banner__content-slogan{font-size:12px}.banner__content-button{font-size:12px;width:130px}}@-webkit-keyframes text-1{0%{left:0;transform:translateX(-110%)}50%{left:100%;transform:translateX(10%)}100%{left:0;transform:translateX(-110%)}}@keyframes text-1{0%{left:0;transform:translateX(-110%)}50%{left:100%;transform:translateX(10%)}100%{left:0;transform:translateX(-110%)}}@-webkit-keyframes text-2{0%{right:0;transform:translateX(110%)}50%{right:100%;transform:translateX(-10%)}100%{right:0;transform:translateX(110%)}}@keyframes text-2{0%{right:0;transform:translateX(110%)}50%{right:100%;transform:translateX(-10%)}100%{right:0;transform:translateX(110%)}}.video{position:relative;overflow:hidden;padding:100px 0 75px}.video.grey{background:#101010}.video__container{display:flex;justify-content:center}.video__container-image{position:relative;width:793px}.video__container-image>img{height:100%}.video__preview{position:absolute;top:20px;left:74px;z-index:9}.video__preview-image{width:644px;border-radius:5px;height:404px;overflow:hidden;text-align:center}.video__preview-image iframe,.video__preview-image img,.video__preview-image video{width:100%;height:100%}.video__preview-image img{position:absolute;-o-object-fit:cover;object-fit:cover;z-index:0}.video__preview-icon{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:68px;height:68px;display:flex;align-items:center;border-radius:50%;background:rgba(0,0,0,.7);transition:background .3s ease,transform .3s ease;cursor:pointer}.video__preview-icon img{transform:translateX(26px)}.video__preview-icon:hover{transform:translate(-50%,-50%) scale(.8);background:#000}.video__animation-text{position:absolute;left:0;top:117px;text-transform:uppercase;font-weight:700;color:#000;-webkit-animation:text-1 15s linear infinite;animation:text-1 15s linear infinite;pointer-events:none}.video__animation-text.grey{color:#101010}.video__animation-text span{font-size:145px;-webkit-text-stroke:2px #757575}.video__animation-text:nth-of-type(2){top:300px;left:inherit;right:-100%;-webkit-animation:text-2 15s linear infinite 3s;animation:text-2 15s linear infinite 3s}@media (max-width:992px){.video{padding:100px 0 75px}.video__container-image{width:700px}.video__container-image>picture img{width:100%}.video__preview{left:65px;top:15px}.video__preview-image{width:570px;height:360px}.video__preview-icon{width:48px;height:48px}.video__preview-icon img{width:18px;transform:translateX(18px)}.video__animation-text span{font-size:120px}}@media (max-width:767px){.video{padding:100px 0 20px}.video__container-image{width:100%}.video__container-image>picture img{display:none}.video__preview-image{width:100%}.video__preview{position:relative;top:0;left:0;width:100%}.video__preview-icon{width:50px;height:50px}.video__preview-icon img{width:15px;transform:translateX(20px)}.video__animation-text{top:0}.video__animation-text span{font-size:90px}.video__animation-text:nth-of-type(2){display:none}}@media (max-width:480px){.video__preview-image{height:250px}.video__animation-text{top:20px;-webkit-animation-duration:12s;animation-duration:12s}.video__animation-text span{font-size:70px}}@media (max-width:320px){.video__preview-image{height:200px}}.partners.grey{background:#101010}.partners__row{max-width:790px;margin:0 auto;display:flex;flex-wrap:wrap;align-items:center}.partners__item{flex:1 1 25%;display:flex;justify-content:center}@media (max-width:767px){.partners__item{flex-basis:25%;padding:15px}.partners__item img{width:100%}}.slogan{padding:111px 0}.slogan__container{display:flex;align-items:center;flex-direction:column}.slogan__title{text-align:center;font-size:32px;font-weight:700;margin-bottom:20px}.slogan__btn{display:inline-block;padding:16px 26px 14px;border-radius:5px;text-decoration:none;font-size:15px}@media (max-width:992px){.slogan__title{font-size:28px}}@media (max-width:480px){.slogan{padding:55px 0}.slogan__title{font-size:20px}.slogan__btn{font-size:13px}}@media (max-width:320px){.slogan__title{font-size:18px}.slogan__btn{font-size:12px}}.business-impact{background:#101010;padding:80px 0}.business-impact.web .business-impact__title{max-width:350px}.business-impact.web .business-impact__item{display:flex;flex-direction:column;justify-content:flex-end}.business-impact__title{max-width:314px;text-align:left;font-size:32px;margin-bottom:30px}.business-impact__list{display:flex}.business-impact__item{width:100%;margin:0 10px;padding:47px 34px 57px 20px;background:#000}.business-impact__item:last-child{margin-right:0}.business-impact__item:first-child{margin-left:0}.business-impact__item-title{font-weight:700;font-size:16px;margin-bottom:20px}.business-impact__item__progress{margin:10px 0}.business-impact__item__progress:last-child{margin-bottom:0}.business-impact__item__progress:first-child{margin-top:0}.business-impact__item__progress-line{width:100%;height:6px;border-radius:20px;margin-bottom:5px;background:#2c2c2c;display:block;position:relative}.business-impact__item__progress-line span{border-radius:20px;height:100%;background:#fff;position:absolute;display:block}.business-impact__item__progress-text{font-weight:500;font-size:14px}.business-impact__slogan{display:none}.business-impact__btn{margin-top:40px;align-self:center;display:inline-block;padding:16px 26px 14px;border-radius:5px;text-decoration:none;font-size:15px}@media (max-width:992px){.business-impact__title{font-size:28px}.business-impact.web .business-impact__title{max-width:300px}.business-impact.web .business-impact__item{padding:47px 15px 57px;margin:0 5px}}@media (max-width:767px){.business-impact{padding:40px 0}.business-impact__list{flex-direction:column}.business-impact.web .business-impact__item,.business-impact__item{margin:10px 0}.business-impact.web .business-impact__item:last-child,.business-impact__item:last-child{margin-bottom:0}.business-impact.web .business-impact__item:first-child,.business-impact__item:first-child{margin-top:0}.business-impact__title{font-size:24px}.business-impact.web .business-impact__title{max-width:250px}.business-impact__slogan{display:block;text-align:center;font-size:24px;margin-top:30px}.business-impact__btn{margin-top:19px}}@media (max-width:480px){.business-impact__title{font-size:20px;max-width:200px;margin:0 0 30px}.business-impact__item-title{font-size:16px}.business-impact__btn{font-size:13px}.business-impact__slogan{font-size:20px}.business-impact.web .business-impact__title{max-width:210px}}@media (max-width:368px){.business-impact__slogan{font-size:18px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
