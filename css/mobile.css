.banner{height:100%;height:480px;padding:10px 0;overflow:hidden}.banner.banner-mobile{height:535px}.banner.banner-web{height:535px}.banner__container{height:100%;position:relative}.banner__row{height:100%;display:flex;align-items:center;justify-content:space-between}.banner__content{width:100%;margin-right:15px}.banner__content-title{font-size:32px;font-weight:700;margin-bottom:15px}.banner__content-slogan{font-size:15px;font-weight:500}.banner__content-buttons{margin-top:30px;display:flex;align-items:center}.banner__content-button{width:170px;display:inline-block;padding:16px 0 14px;margin:0 5px;border:1px solid #fff;text-align:center;border-radius:5px;text-decoration:none;color:#fff}.banner__content-button:last-child{margin-right:0}.banner__content-button:first-child{margin-left:0}.banner__animation{width:100%;position:absolute;right:0;top:50%;transform:translate(253px,-50%);z-index:-1;height:450px}.banner__animation video{width:100%;height:100%}.banner__image{width:70%}.banner__image img{width:100%}@media (max-width:992px){.banner{height:350px}.banner.banner-mobile{height:450px}.banner__animation{height:300px;transform:translate(180px,-50%)}.banner__content-title{font-size:28px}.banner__image{width:50%}}@media (max-width:767px){.banner{overflow:hidden;height:auto;min-height:350px;padding-bottom:60px}.banner.banner-mobile{height:auto;min-height:450px}.banner__row{flex-direction:column-reverse}.banner__animation{position:relative;transform:translate(0,0);right:inherit;top:inherit}.banner__content{margin-top:50px;margin-right:0;display:flex;flex-direction:column;align-items:center;text-align:center}.banner:not(.banner-main) .banner__content{margin-top:10px}}@media (max-width:480px){.banner{padding-bottom:40px}.banner__animation{width:150%}.banner__animation video{width:100%;height:100%}.banner__image{width:80%}.banner__content{margin-top:10px;text-align:left;align-items:flex-start}.banner__content-button{font-size:13px;width:150px}.banner__content-title{font-size:25px}.banner__content-slogan{font-size:13px}}@media (max-width:368px){.banner__content-title{font-size:22px}.banner__content-slogan{font-size:12px}.banner__content-button{font-size:12px;width:130px}}.progress{padding:42px 0;background:#0c0b09}.progress.progress-web{background:#101010}.progress.progress-mobile{padding:81px 0}.progress.progress-mobile.first{background:#101010}.progress.progress-mobile.first .progress__item{background:#101010}.progress.progress-mobile.first .progress__item-step{background:#101010}.progress.progress-mobile.second{background:#000}.progress.progress-mobile.second .progress__item{background:#000}.progress.progress-mobile.second .progress__item-step{background:#000}.progress.progress-mobile .progress__item{padding:38px 15px 44px 30px}.progress.progress-mobile .progress__item-li{font-size:14px;position:relative;list-style:none;margin:7px 0}.progress.progress-mobile .progress__item-li:last-child{margin-bottom:0}.progress.progress-mobile .progress__item-li:first-child{margin-top:0}.progress.progress-mobile .progress__item-li::before{background:#fff;content:'';display:inline-block;position:absolute;left:0;top:2px;transform:translateX(-100%);height:8px;width:8px;border-radius:50%;margin-left:-9px}.progress__title{font-size:32px;font-weight:700;margin-bottom:15px}.progress__description{font-size:14px;font-weight:500;margin-bottom:47px;max-width:480px}.progress__container{display:flex}.progress__item{width:100%;position:relative;background:#000;padding:20px 14px 50px;margin:0 8px;box-shadow:0 3px 20px 0 rgba(255,255,255,.11);border:1px solid #272727}.progress__item:last-child{margin-right:0}.progress__item:first-child{margin-left:0}.progress__item::after{content:'';width:100%;height:0;border-top:4px dotted #fff;position:absolute;top:0;left:49%;transform:translate(0,-50%);z-index:1}.progress__item:last-child::after{display:none}.progress__item-icon{margin-bottom:13px}.progress__item-icon img{height:50px}.progress__item-title{font-size:14px;font-weight:700}.progress__item-description{margin-top:5px;font-size:12px;font-weight:500}.progress__item-step{position:absolute;top:0;left:50%;transform:translate(-50%,-50%);background:#000;width:40px;height:40px;display:flex;align-items:center;justify-content:center;border-radius:50%;border-top:1px solid #272727;z-index:2;-webkit-filter:drop-shadow(0 -3px 3px rgba(255, 255, 255, .11));filter:drop-shadow(0 -3px 3px rgba(255, 255, 255, .11))}.progress__btn{margin-top:40px;align-self:center;display:inline-block;padding:16px 26px 14px;border-radius:5px;text-decoration:none;font-size:15px}@media (max-width:992px){.progress__container{flex-wrap:wrap;justify-content:center}.progress__item{width:45%;margin:20px 10px}.progress__item::after{display:none}.progress__item:first-child{margin-left:10px}.progress__item:last-child{margin-right:10px}.progress__title{font-size:28px}}@media (max-width:767px){.progress__container{justify-content:space-between}.progress__item{width:80%;margin:20px auto}.progress__item:last-child{margin-bottom:0}.progress__item:first-child{margin-top:0}.progress__item:first-child{margin-left:auto}.progress__item:last-child{margin-right:auto}.progress__title{font-size:24px}.progress__description{font-size:14px}.progress__btn{font-size:14px}}@media (max-width:480px){.progress{padding:40px 0}.progress.progress-mobile{padding:40px 0}.progress__container{justify-content:center}.progress__item{width:95%}.progress__title{font-size:20px}.progress__description{font-size:13px}.progress__btn{font-size:13px}}@media (max-width:368px){.progress__item{width:100%}.progress__btn{font-size:12px}}.technology-mobile{background:#101010;padding:80px 0}.technology-mobile__container{display:flex;flex-direction:column;align-items:center;text-align:center}.technology-mobile__title{font-size:32px;font-weight:700;margin-bottom:15px}.technology-mobile__description{max-width:520px;font-size:15px}.technology-mobile__list{margin-top:26px;display:flex;align-items:center;opacity:.4}.technology-mobile__item{margin:0 33px}.technology-mobile__item:last-child{margin-right:0}.technology-mobile__item:first-child{margin-left:0}@media (max-width:767px){.technology-mobile__title{font-size:28px}.technology-mobile__description{font-size:14px}.technology-mobile__list{flex-wrap:wrap}.technology-mobile__item{width:50%;margin:0;padding:10px 0}}@media (max-width:480px){.technology-mobile{padding:40px 0}.technology-mobile__title{font-size:18px}.technology-mobile__description{font-size:12px}.technology-mobile__item img{width:50%}.technology-mobile__item:nth-of-type(1){order:4}.technology-mobile__item:nth-of-type(2){order:1}.technology-mobile__item:nth-of-type(3){order:3}.technology-mobile__item:nth-of-type(4){order:2}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
