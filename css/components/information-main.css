@-webkit-keyframes draw{100%{stroke-dashoffset:0;stroke-dasharray:200}}@keyframes draw{100%{stroke-dashoffset:0;stroke-dasharray:200}}.information-main{background:#101010;padding:30px 0 50px}.information-main__row{display:flex;align-items:flex-start}.information-main__item{width:100%;margin:0 10px}.information-main__item:last-child{margin-right:0}.information-main__item:first-child{margin-left:0}.information-main__item-icon{height:57.16px}.information-main__item-title{margin:17px 0 10px;font-size:14px;font-weight:700}.information-main__item-description{font-size:12px;font-weight:500}.information-main__item-btn{display:inline-block;padding:16px 26px 14px;border:1px solid #fff;border-radius:5px;text-decoration:none;color:#fff;text-align:center;font-size:15px;font-weight:500;margin-top:20px}@media (max-width:992px){.information-main__row{flex-wrap:wrap}.information-main__item{width:50%;padding:10px;margin:0}}@media (max-width:767px){.information-main{background:#000}.information-main__item{padding:10px}}@media (max-width:480px){.information{padding-top:50px;overflow:hidden}.information-main__item{width:100%;padding:0;margin:25px 0}.information-main__item:last-child{margin-bottom:0}.information-main__item:first-child{margin-top:0}.information-main__item-title{font-size:18px}.information-main__item-btn{font-size:13px;position:relative}.information-main__item-btn::after{content:'';border-top:6px dotted #fff;width:calc(100vw - 100% - 30px);position:absolute;right:0;margin-right:-20px;top:50%;transform:translate(100%,-50%)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
